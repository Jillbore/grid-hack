#BlueJ class context
comment0.target=int\ getNumRows()
comment0.text=\nReturns\ the\ number\ of\ rows\ in\ this\ grid.\n@return\ the\ number\ of\ rows,\ or\ -1\ if\ this\ grid\ is\ unbounded\n\n
comment1.target=int\ getNumCols()
comment1.text=\nReturns\ the\ number\ of\ columns\ in\ this\ grid.\n@return\ the\ number\ of\ columns,\ or\ -1\ if\ this\ grid\ is\ unbounded\n\n
comment10.params=loc
comment10.target=ArrayList<E>\ getNeighbors(Location)
comment10.text=\nGets\ the\ neighboring\ occupants\ in\ all\ eight\ compass\ directions\ (north,\nnortheast,\ east,\ southeast,\ south,\ southwest,\ west,\ and\ northwest).\n<br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ a\ location\ in\ this\ grid\n@return\ returns\ an\ array\ list\ of\ the\ objects\ in\ the\ occupied\ locations\nadjacent\ to\ <code>loc</code>\ in\ this\ grid\n\n
comment2.params=loc
comment2.target=boolean\ isValid(Location)
comment2.text=\nChecks\ whether\ a\ location\ is\ valid\ in\ this\ grid.\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ not\ <code>null</code>\n@param\ loc\ the\ location\ to\ check\n@return\ <code>true</code>\ if\ <code>loc</code>\ is\ valid\ in\ this\ grid,\n<code>false</code>\ otherwise\n\n
comment3.params=loc\ obj
comment3.target=E\ put(Location,\ E)
comment3.text=\nPuts\ an\ object\ at\ a\ given\ location\ in\ this\ grid.\ <br\ />\nPrecondition\:\ (1)\ <code>loc</code>\ is\ valid\ in\ this\ grid\ (2)\n<code>obj</code>\ is\ not\ <code>null</code>\n@param\ loc\ the\ location\ at\ which\ to\ put\ the\ object\n@param\ obj\ the\ new\ object\ to\ be\ added\n@return\ the\ object\ previously\ at\ <code>loc</code>\ (or\ <code>null</code>\nif\ the\ location\ was\ previously\ unoccupied)\n\n
comment4.params=loc
comment4.target=E\ remove(Location)
comment4.text=\nRemoves\ the\ object\ at\ a\ given\ location\ from\ this\ grid.\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ the\ location\ of\ the\ object\ that\ is\ to\ be\ removed\n@return\ the\ object\ that\ was\ removed\ (or\ <code>null<code>\ if\ the\ location\nis\ unoccupied)\n\n
comment5.params=loc
comment5.target=E\ get(Location)
comment5.text=\nReturns\ the\ object\ at\ a\ given\ location\ in\ this\ grid.\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ a\ location\ in\ this\ grid\n@return\ the\ object\ at\ location\ <code>loc</code>\ (or\ <code>null<code>\ \nif\ the\ location\ is\ unoccupied)\n\n
comment6.target=ArrayList<Location>\ getOccupiedLocations()
comment6.text=\nGets\ the\ locations\ in\ this\ grid\ that\ contain\ objects.\n@return\ an\ array\ list\ of\ all\ occupied\ locations\ in\ this\ grid\n\n
comment7.params=loc
comment7.target=ArrayList<Location>\ getValidAdjacentLocations(Location)
comment7.text=\nGets\ the\ valid\ locations\ adjacent\ to\ a\ given\ location\ in\ all\ eight\ncompass\ directions\ (north,\ northeast,\ east,\ southeast,\ south,\ southwest,\nwest,\ and\ northwest).\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ a\ location\ in\ this\ grid\n@return\ an\ array\ list\ of\ the\ valid\ locations\ adjacent\ to\ <code>loc</code>\nin\ this\ grid\n\n
comment8.params=loc
comment8.target=ArrayList<Location>\ getEmptyAdjacentLocations(Location)
comment8.text=\nGets\ the\ valid\ empty\ locations\ adjacent\ to\ a\ given\ location\ in\ all\ eight\ncompass\ directions\ (north,\ northeast,\ east,\ southeast,\ south,\ southwest,\nwest,\ and\ northwest).\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ a\ location\ in\ this\ grid\n@return\ an\ array\ list\ of\ the\ valid\ empty\ locations\ adjacent\ to\n<code>loc</code>\ in\ this\ grid\n\n
comment9.params=loc
comment9.target=ArrayList<Location>\ getOccupiedAdjacentLocations(Location)
comment9.text=\nGets\ the\ valid\ occupied\ locations\ adjacent\ to\ a\ given\ location\ in\ all\neight\ compass\ directions\ (north,\ northeast,\ east,\ southeast,\ south,\nsouthwest,\ west,\ and\ northwest).\ <br\ />\nPrecondition\:\ <code>loc</code>\ is\ valid\ in\ this\ grid\n@param\ loc\ a\ location\ in\ this\ grid\n@return\ an\ array\ list\ of\ the\ valid\ occupied\ locations\ adjacent\ to\n<code>loc</code>\u00A0in\ this\ grid\n\n
numComments=11
