#BlueJ class context
comment0.target=GridActor()
comment0.text=\nConstructs\ a\ blue\ actor\ that\ is\ facing\ north.\n\n
comment1.target=Color\ getColor()
comment1.text=\nGets\ the\ color\ of\ this\ actor.\n@return\ the\ color\ of\ this\ actor\n\n
comment10.target=void\ act()
comment10.text=\nReverses\ the\ direction\ of\ this\ actor.\ Override\ this\ method\ in\ subclasses\nof\ <code>GridActor</code>\ to\ define\ types\ of\ actors\ with\ different\ behavior\n\n\n
comment11.target=String\ toString()
comment11.text=\nCreates\ a\ string\ that\ describes\ this\ actor.\n@return\ a\ string\ with\ the\ location,\ direction,\ and\ color\ of\ this\ actor\n\n
comment12.params=world
comment12.target=void\ addedToWorld(greenfoot.World)
comment12.text=\nFor\ Greenfoot.\n<p>\n\nSecond\ initialization\ method\ in\ Greenfoot.\ Updates\ the\nenvironment\ when\ objects\ are\ added\ to\ the\ world.\n@param\ world\ \ \ \ world\ where\ objects\ are\ added.\n\n
comment13.params=x\ y
comment13.target=void\ setLocation(int,\ int)
comment13.text=\nFor\ Greenfoot.\n<p>\n\nOverrides\ setLocation\ so\ that\ setting\ the\ location\ from\ greenfoot\ \nchanges\ the\ location\ in\ the\ grid.\n\n\n
comment14.target=GreenfootImage\ getImage()
comment14.text=\nOverrides\ getImage\ so\ that\ setting\ the\ color\ will\ change\ the\ image.\n@return\ \ \ \ the\ Greenfoot\ image\ of\ this\ actor.\n\n
comment2.params=newColor
comment2.target=void\ setColor(Color)
comment2.text=\nSets\ the\ color\ of\ this\ actor.\n@param\ newColor\ the\ new\ color\n\n
comment3.target=int\ getDirection()
comment3.text=\nGets\ the\ current\ direction\ of\ this\ actor.\n@return\ the\ direction\ of\ this\ actor,\ an\ angle\ between\ 0\ and\ 359\ degrees\n\n
comment4.params=newDirection
comment4.target=void\ setDirection(int)
comment4.text=\nSets\ the\ current\ direction\ of\ this\ actor.\n@param\ newDirection\ the\ new\ direction.\ The\ direction\ of\ this\ actor\ is\ set\nto\ the\ angle\ between\ 0\ and\ 359\ degrees\ that\ is\ equivalent\ to\n<code>newDirection</code>.\n\n
comment5.target=Grid<GridActor>\ getGrid()
comment5.text=\nGets\ the\ grid\ in\ which\ this\ actor\ is\ located.\n@return\ the\ grid\ of\ this\ actor,\ or\ <code>null</code>\ if\ this\ actor\ is\nnot\ contained\ in\ a\ grid\n\n
comment6.target=Location\ getLocation()
comment6.text=\nGets\ the\ location\ of\ this\ actor.\ <br\ />\nPrecondition\:\ This\ actor\ is\ contained\ in\ a\ grid\n@return\ the\ location\ of\ this\ actor\n\n
comment7.params=gr\ loc
comment7.target=void\ putSelfInGrid(Grid<GridActor>,\ Location)
comment7.text=\nPuts\ this\ actor\ into\ a\ grid.\ If\ there\ is\ another\ actor\ at\ the\ given\nlocation,\ it\ is\ removed.\ <br\ />\nPrecondition\:\ (1)\ This\ actor\ is\ not\ contained\ in\ a\ grid\ (2)\n<code>loc</code>\ is\ valid\ in\ <code>gr</code>\n@param\ gr\ the\ grid\ into\ which\ this\ actor\ should\ be\ placed\n@param\ loc\ the\ location\ into\ which\ the\ actor\ should\ be\ placed\n\n
comment8.target=void\ removeSelfFromGrid()
comment8.text=\nRemoves\ this\ actor\ from\ its\ grid.\ <br\ />\nPrecondition\:\ This\ actor\ is\ contained\ in\ a\ grid\n\n
comment9.params=newLocation
comment9.target=void\ moveTo(Location)
comment9.text=\nMoves\ this\ actor\ to\ a\ new\ location.\ If\ there\ is\ another\ actor\ at\ the\ngiven\ location,\ it\ is\ removed.\ <br\ />\nPrecondition\:\ (1)\ This\ actor\ is\ contained\ in\ a\ grid\ (2)\n<code>newLocation</code>\ is\ valid\ in\ the\ grid\ of\ this\ actor\n@param\ newLocation\ the\ new\ location\n\n
numComments=15
